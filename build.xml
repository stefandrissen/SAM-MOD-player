<?xml version="1.0" encoding="UTF-8"?>
<project name="sam-mod-player" default="all-b-dos" xmlns:if="ant:if">

	<property file=".properties" />

	<!-- assemble -->

	<macrodef name="assemble">
		<attribute name="source" />
		<attribute name="obj" default="@{source}" />
		<attribute name="mapfile" default="false" />
		<attribute name="debug" default="false" />

		<sequential>

			<echo message="compiling: @{source} mapfile:@{mapfile}" />

			<mkdir dir="obj" />

			<exec executable="${python}" failonerror="true">
				<arg value="${pyz80}" />
				<arg value="--obj=obj/@{obj}" />
				<arg value="--mapfile=obj/@{source}.map" if:true="@{mapfile}" />
				<arg line="-D debug" if:true="@{debug}" />
				<arg value="src/@{source}.s" />
			</exec>

		</sequential>

	</macrodef>

	<target name="assemble-example">

		<assemble source="example" />

	</target>

	<!-- create-disk -->

	<target name="create-disk">
		<create-disk b-dos="true" launch="false" />
	</target>

	<macrodef name="create-disk">
		<attribute name="samdos" default="false" />
		<attribute name="masterdos" default="false" />
		<attribute name="b-dos" default="false" />
		<attribute name="b-dos-atom-lite" default="false" />
		<attribute name="b-dos-trinity" default="false" />
		<attribute name="launch" default="true" />

		<sequential>

			<echo file="src/constants/text.version.i">; SAM MOD player version

defm "${version}"
</echo>

			<assemble source="loader" mapfile="${mapfile}" />
			<assemble source="demo" mapfile="${mapfile}" />
			<assemble source="burstplayer" mapfile="${mapfile}" debug="true" />
			<assemble source="tracker" mapfile="${mapfile}" />

			<antcall target="assemble-test-mod" />

			<exec executable="${python}" failonerror="true">
				<arg file="${pyz80}" />

				<arg value="-I" />
				<arg file="res/dos/samdos2" if:true="@{samdos}" />
				<arg file="res/dos/MDOS23" if:true="@{masterdos}" />
				<arg file="res/dos/B-DOS15a" if:true="@{b-dos}" />
				<arg file="res/dos/AL-BDOS15a" if:true="@{b-dos-atom-lite}" />
				<arg file="res/dos/bdos15t-6" if:true="@{b-dos-trinity}" />

				<arg value="-I" /><arg file="res/loading.$" />
				<arg value="-I" /><arg file="obj/tracker" />
				<arg value="-I" /><arg file="obj/burstplayer" />
				<arg value="-I" /><arg file="obj/loader" />
				<arg value="-I" /><arg file="obj/demo" />

				<arg value="-I" /><arg file="res/mods/way_too_sample.mod" />

				<arg line="-o obj/SAM.MOD.player.${version}.mgt" />
				<arg value="--nozip" />
				<arg value="--mapfile=obj/boot.map" if:true="${mapfile}" />
				<arg value="src/boot.s" />
			</exec>

			<copy file="obj/${debug}.map" tofile="obj/SAM.MOD.player.${version}.map" if:true="${mapfile}" />

			<simcoupe disk="SAM.MOD.player.${version}.mgt" if:true="@{launch}"/>

		</sequential>

	</macrodef>

	<!-- simcoupe -->

	<macrodef name="simcoupe">
		<attribute name="disk" />

		<sequential>

			<exec executable="${simcoupe}" spawn="true">
				<arg file="obj/@{disk}" />
			</exec>

		</sequential>

	</macrodef>

	<!-- all - compile all, create disk and launch -->

	<target name="all-samdos" description="">
		<create-disk samdos="true" />
	</target>

	<target name="all-b-dos-trinity" description="">
		<create-disk b-dos-trinity="true" />
	</target>

	<target name="all-b-dos-atom-lite" description="">
		<create-disk b-dos-atom-lite="true" />
	</target>

	<target name="all-b-dos" description="">
		<create-disk b-dos="true" />
	</target>

	<target name="all-masterdos" description="">
		<create-disk masterdos="true" />
	</target>

	<!-- assemble-test-mod -->

	<target name="assemble-test-mod">

		<exec executable="${python}" failonerror="true">
			<arg file="${pyz80}" />
			<arg value="--obj=res/test.m" />
			<arg value="src/test.mod.s" />
		</exec>

	</target>

	<!-- create-example -->

	<target name="create-example">

		<assemble source="burstplayer" mapfile="${mapfile}" />
		<assemble source="tracker" mapfile="${mapfile}" />

		<exec executable="${python}" failonerror="true">
			<arg file="${pyz80}" />
			<arg line="-I res/mods/think_tw.mod" />
			<arg line="-I obj/burstplayer" />
			<arg line="-I obj/tracker" />
			<arg line="-o obj/example.mgt" />
			<arg value="src/example.s" />
		</exec>

	</target>

	<!-- clean -->

	<target name="clean" description="clean obj">

		<delete dir="obj" />
		<mkdir dir="obj" />

	</target>

</project>
